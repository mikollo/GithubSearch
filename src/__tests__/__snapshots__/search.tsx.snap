// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Displays results after user types 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 20,
    }
  }
>
  <TextInput
    allowFontScaling={true}
    onChangeText={[Function]}
    placeholder="Search repos"
    underlineColorAndroid="transparent"
  />
  <RCTScrollView
    data={
      Array [
        Object {
          "avatar": "https://avatars3.githubusercontent.com/u/69631?v=4",
          "fullName": "facebook/react",
          "id": 10270250,
          "picked": false,
          "starCount": 116288,
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "white",
              "opacity": 1,
            }
          }
        >
          <Text>
            facebook/react
          </Text>
          <Text>
            116288
          </Text>
          <Image
            source={
              Object {
                "uri": "https://avatars3.githubusercontent.com/u/69631?v=4",
              }
            }
            style={
              Object {
                "borderRadius": 10,
                "height": 20,
                "width": 20,
              }
            }
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
  <Text>
    0
  </Text>
</View>
`;

exports[`Renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 20,
    }
  }
>
  <TextInput
    allowFontScaling={true}
    onChangeText={[Function]}
    placeholder="Search repos"
    underlineColorAndroid="transparent"
  />
  <RCTScrollView
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
  <Text>
    0
  </Text>
</View>
`;
